AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  PipeLineDataBucketName:
    Type: String
    AllowedPattern: ^[a-z0-9.-]*$
    Description: Name of the bucket storing data for the buildpipline


Resources:
  CodePipelineArtifactsBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Ref PipeLineDataBucketName
      Tags:
        - Key: Project
          Value: patantCodepipeline

# Role for codeBuild
  PipeLineRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service: 
                - "codebuild.amazonaws.com"
                - "codepipeline.amazonaws.com"
                - "cloudformation.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
  PipeLinePolicies:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "PipelinePolicies"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Resource: "arn:aws:logs:*:*:*"
          -
            Effect: "Allow"
            Action:
              - "s3:PutObject"
              - "s3:GetObject"
              - "s3:GetObjectVersion"
            Resource:
              - "arn:aws:s3:::codepipeline*"
              - !Join [ "", [ "arn:aws:s3:::", !Ref CodePipelineArtifactsBucket, "*" ] ]
          -
            Effect: "Allow"
            Action:
              - "codecommit:CancelUploadArchive"
              - "codecommit:GetBranch"
              - "codecommit:GetCommit"
              - "codecommit:GetUploadArchiveStatus"
              - "codecommit:UploadArchive"
            Resource: "*"
          - 
            Effect: "Allow"
            Action:
              - "codedeploy:CreateDeployment"
              - "codedeploy:GetApplicationRevision"
              - "codedeploy:GetDeployment"
              - "codedeploy:GetDeploymentConfig"
              - "codedeploy:RegisterApplicationRevision"
            Resource: "*"
          - 
            Effect: "Allow"
            Action:
              - "codebuild:BatchGetBuilds"
              - "codebuild:StartBuild"
            Resource: "*"
          - 
            Effect: "Allow"
            Action:
              - "cloudformation:*"
              - "lambda:*"
              - "iam:*"
              - "apigateway:*"
            Resource: "*"
      Roles:
        - !Ref PipeLineRole

# Code build for the lambda functrion. Using buildspec.yml in the root of the project
  BuildPatantTime:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: PatantTimeBuild
      Description: Build for lambda function patantTime
      ServiceRole: !GetAtt PipeLineRole.Arn
      Artifacts:
        Type: s3
        Location: !Ref CodePipelineArtifactsBucket
        Name: functionBuild
        NamespaceType: NONE
        Packaging: ZIP
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:6.3.1
      Source:
        Location: https://github.com/patant-dw/codepipeline.git
        Type: GITHUB
      TimeoutInMinutes: 10
      Tags:
        - Key: Project
          Value: patantTime

  BuildPatantPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref CodePipelineArtifactsBucket
        Type: S3
      Name: PatantTimePipeline
      RestartExecutionOnUpdate: false
      RoleArn: !GetAtt PipeLineRole.Arn
      Stages: 
        - 
          Name: Source
          Actions: 
            - 
              Name: SourceAction
              ActionTypeId: 
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              OutputArtifacts: 
                - 
                  Name: SourceOutput
              Configuration: 
                Owner: patant-dw
                Repo: codepipeline
                Branch: master
                OAuthToken: <Your github token>
              RunOrder: 1
        -
          Name: Build
          Actions:
            -
              Name: CodeBuild
              InputArtifacts:
                -
                  Name: SourceOutput
              ActionTypeId:
                Category: Build 
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref BuildPatantTime
              OutputArtifacts: 
                - 
                  Name: CodebuildOutput
              RunOrder: 1
        -
          Name: DeployChangeSet
          Actions:
            -
              Name: DeployChangeSet
              InputArtifacts:
                -
                  Name: CodebuildOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName: pipeline
                RoleArn: !GetAtt PipeLineRole.Arn
                Capabilities: CAPABILITY_IAM
                StackName: patantTime
                TemplatePath: CodebuildOutput::patanttimeSamTemplate.yaml
              RunOrder: 1
        -
          Name: ApplyChangeSet
          Actions:
            -
              Name: ApplyChangeSet
              InputArtifacts:
                -
                  Name: CodebuildOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                StackName: patantTime
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: pipeline
              RunOrder: 1
